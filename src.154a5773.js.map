{"version":3,"sources":["../src/main.js","../src/utils/methods.js","../src/utils/utils.js","../src/modules/core/namespaces.js","../src/utils/window.js","../src/types/Base.js","../src/utils/adopter.js","../src/modules/optional/arrange.js","../src/modules/core/regex.js","../src/modules/optional/class.js","../src/modules/optional/css.js","../src/modules/optional/data.js","../src/modules/optional/memory.js","../src/types/Color.js","../src/types/Point.js","../src/types/Matrix.js","../src/modules/core/parser.js","../src/types/Box.js","../src/types/List.js","../src/modules/core/selector.js","../src/modules/core/event.js","../src/types/EventTarget.js","../src/modules/core/defaults.js","../src/types/SVGArray.js","../src/types/SVGNumber.js","../src/modules/core/attr.js","../src/elements/Dom.js","../src/elements/Element.js","../src/modules/optional/sugar.js","../src/modules/optional/transform.js","../src/elements/Container.js","../src/elements/Defs.js","../src/elements/Shape.js","../src/modules/core/circled.js","../src/elements/Ellipse.js","../src/elements/Fragment.js","../src/modules/core/gradiented.js","../src/elements/Gradient.js","../src/elements/Pattern.js","../src/elements/Image.js","../src/types/PointArray.js","../src/modules/core/pointed.js","../src/elements/Line.js","../src/elements/Marker.js","../src/animation/Controller.js","../src/utils/pathParser.js","../src/types/PathArray.js","../src/animation/Morphable.js","../src/elements/Path.js","../src/modules/core/poly.js","../src/elements/Polygon.js","../src/elements/Polyline.js","../src/elements/Rect.js","../src/animation/Queue.js","../src/animation/Animator.js","../src/animation/Timeline.js","../src/animation/Runner.js","../src/elements/Svg.js","../src/elements/Symbol.js","../src/modules/core/textable.js","../src/elements/Text.js","../src/elements/Tspan.js","../src/elements/Circle.js","../src/elements/ClipPath.js","../src/elements/ForeignObject.js","../src/modules/core/containerGeometry.js","../src/elements/G.js","../src/elements/A.js","../src/elements/Mask.js","../src/elements/Stop.js","../src/elements/Style.js","../src/elements/TextPath.js","../src/elements/Use.js","sketches/stripes.ts","sketches/tripes.ts","sketches/blocky.ts","lib/pipe.ts","lib/random.ts","lib/clamp.ts","lib/maybe.ts","lib/path.ts","sketches/drink.ts","sketches/index.ts","lib/init.ts","index.js"],"names":["methods","names","registerMethods","name","m","Array","isArray","addMethodNames","Object","getOwnPropertyNames","assign","_name","getMethodsFor","getMethodNames","Set","_names","push","map","array","block","i","il","length","result","filter","radians","d","Math","PI","degrees","r","camelCase","s","toLowerCase","replace","g","toUpperCase","unCamelCase","capitalize","charAt","slice","proportionalSize","element","width","height","box","bbox","getOrigin","o","origin","ox","originX","oy","originY","x","y","condX","condY","includes","svg","html","xmlns","xlink","svgjs","globals","window","document","registerWindow","win","doc","save","saveWindow","restoreWindow","withWindow","fn","getWindow","Base","elements","root","create","ns","createElementNS","makeInstance","isHTML","adopter","querySelector","wrapper","createElement","innerHTML","firstChild","removeChild","nodeOrNew","node","Node","adopt","instance","nodeName","Fragment","className","mockAdopt","mock","register","asRoot","prototype","getClass","did","eid","assignNewId","children","id","extend","modules","key","wrapWithAttrCheck","args","constructor","apply","attr","siblings","parent","position","index","next","prev","forward","add","remove","backward","front","back","before","after","insertBefore","insertAfter","numberAndUnit","hex","rgb","reference","transforms","whitespace","isHex","isRgb","isBlank","isNumber","isImage","delimiter","isPathLetter","classes","trim","split","hasClass","indexOf","addClass","join","removeClass","c","toggleClass","css","style","val","ret","arguments","cssText","el","forEach","t","cased","test","show","hide","visible","data","a","v","attributes","JSON","parse","e","stringify","remember","k","memory","forget","_memory","sixDigitHex","substring","componentHex","component","integer","round","max","min","toString","is","object","space","getParameters","b","params","_a","_b","_c","_d","z","h","l","cieSpace","hueToRgb","p","q","Color","init","cmyk","hsl","isGrey","delta","color","values","noWhitespace","exec","parseInt","Error","hexParse","components","lab","xyz","lch","sqrt","atan2","dToR","cos","sin","yL","xL","zL","ct","mx","rU","gU","bU","pow","bd","toArray","toHex","_clamped","toRgb","rV","gV","bV","string","rL","gL","bL","xU","yU","zU","mode","random","pi","grey","Point","clone","base","source","transform","transformO","Matrix","isMatrixLike","f","point","screenCTM","inverse","closeEnough","threshold","abs","around","cx","cy","matrix","aroundO","dx","dy","translateO","lmultiplyO","decompose","determinant","ccw","sx","thetaRad","theta","st","lam","sy","scaleX","scaleY","shear","rotate","translateX","translateY","equals","other","comp","flip","axis","flipO","scaleO","fromArray","Element","matrixify","parseFloat","call","inverseO","det","na","nb","nc","nd","ne","nf","lmultiply","matrixMultiply","multiply","multiplyO","rotateO","scale","shearO","lx","skew","skewO","tan","ly","skewX","skewY","formatTransforms","transformer","rx","ry","isFinite","px","py","tx","ty","translate","valueOf","flipBoth","flipX","flipY","positionX","NaN","positionY","relative","relativeX","relativeY","ctm","getCTM","isRoot","rect","getScreenCTM","parser","nodes","size","path","parentNode","body","documentElement","addTo","isNulledBox","domContains","contains","Box","addOffset","pageXOffset","pageYOffset","left","top","w","x2","y2","isNulled","merge","xMin","Infinity","xMax","yMin","yMax","getBox","getBBoxFn","retry","getBBox","rbox","getRBox","getBoundingClientRect","inside","viewbox","zoom","level","clientWidth","clientHeight","zoomX","zoomY","zoomAmount","Number","MAX_SAFE_INTEGER","List","arr","each","fnOrMethodName","concat","reserved","baseFind","query","querySelectorAll","find","findOne","reduce","obj","attrs","listenerId","windowEvents","getEvents","n","getEventHolder","events","getEventTarget","clearEvents","on","listener","binding","options","bind","bag","_svgjsListenerId","event","ev","addEventListener","off","namespace","removeEventListener","dispatch","Event","dispatchEvent","CustomEvent","detail","cancelable","EventTarget","type","j","defaultPrevented","fire","noop","timeline","duration","ease","delay","fill","stroke","opacity","offset","SVGArray","toSet","SVGNumber","convert","unit","value","divide","number","isNaN","match","minus","plus","times","toJSON","hooks","registerAttrHook","nodeValue","last","curr","removeAttribute","getAttribute","defaults","_val","hook","isColor","leading","setAttributeNS","setAttribute","rebuild","Dom","removeNamespace","SVGElement","appendChild","childNodes","put","clear","hasChildNodes","lastChild","deep","writeDataToDom","cloneNode","first","get","has","htmlOrFn","outerHTML","xml","matches","selector","matcher","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","putIn","removeElement","replaceChild","precision","factor","svgOrFn","outerSVG","words","text","textContent","wrap","xmlOrFn","outerXML","current","_this","well","fragment","createDocumentFragment","len","firstElementChild","dom","hasAttribute","setData","center","defs","dmove","move","parents","until","keys","sugar","prefix","extension","mat","angle","direction","radius","_element","getTotalLength","pointAt","getPointAtLength","font","untransform","str","kv","reverse","toParent","pCtm","toRoot","decomposed","cleanRelative","Container","flatten","ungroup","Defs","Shape","Ellipse","circled","ellipse","from","fx","fy","x1","y1","to","Gradient","targets","url","update","gradiented","gradient","Pattern","pattern","patternUnits","Image","load","callback","img","src","image","PointArray","maxX","maxY","minX","minY","points","pop","toLine","MorphArray","Line","plot","pointed","line","Marker","orient","ref","makeSetterGetter","marker","easing","pos","bezier","steps","stepPosition","jumps","beforeFlag","step","floor","jumping","Stepper","done","Ease","Controller","stepper","target","dt","recalculate","_duration","overshoot","_overshoot","os","log","zeta","wn","Spring","velocity","acceleration","newPosition","PID","windup","integral","error","_windup","P","I","D","segmentParameters","M","L","H","V","C","S","Q","T","A","Z","pathHandlers","p0","mlhvqtcsaz","jl","makeAbsolut","command","segment","segmentComplete","startNewSegment","token","inNumber","finalizeNumber","pathLetter","lastCommand","small","isSmall","inSegment","pointSeen","hasExponent","finalizeSegment","absolute","segments","isArcFlag","isArc","isExponential","lastToken","pathParser","toAbsolute","arrayToString","PathArray","getClassForType","NonMorphable","morphableTypes","ObjectBag","Morphable","_stepper","_from","_to","_type","_context","_morphObj","at","complete","_set","align","TransformBag","sortByKey","splice","objOrArr","entries","Type","sort","shift","num","registerMorphableType","makeMorphable","Path","_array","Polygon","polygon","poly","Polyline","polyline","Rect","Queue","_first","_last","item","Animator","nextDraw","frames","timeouts","immediates","timer","performance","Date","frame","run","requestAnimationFrame","_draw","timeout","time","now","immediate","cancelFrame","clearTimeout","cancelImmediate","nextTimeout","lastTimeout","nextFrame","lastFrame","nextImmediate","makeSchedule","runnerInfo","start","runner","end","defaultSource","Timeline","timeSource","_timeSource","_startTime","_speed","_persist","_nextFrame","_paused","_runners","_runnerIds","_lastRunnerId","_time","_lastSourceTime","_lastStepTime","_step","_stepFn","_stepImmediate","active","finish","getEndTimeOfTimeline","pause","getEndTime","lastRunnerInfo","getLastRunnerInfo","lastDuration","lastStartTime","endTimes","getRunnerInfoById","_continue","persist","dtOrForever","play","updateTime","yes","currentSpeed","speed","positive","schedule","when","absoluteStartTime","endTime","unschedule","info","seek","stop","immediateStep","dtSource","dtTime","reset","runnersLeft","dtToStart","_timeline","Runner","_queue","_isDeclarative","_history","enabled","_lastTime","_reseted","transformId","_haveReversed","_reverse","_loopsDone","_swing","_wait","_times","_frameId","addTransform","animate","sanitise","loop","clearTransform","clearTransformsFromQueue","isTransform","during","queue","_prepareRunner","swing","wait","loops","loopDuration","loopsDone","whole","partial","swinging","backwards","uncliped","clipped","swingForward","progress","initFn","runFn","retargetFn","initialiser","retarget","initialised","finished","running","_lastPosition","justStarted","justFinished","declarative","converged","_initialise","_run","needsIt","_rememberMorpher","method","morpher","caller","positionOrDt","allfinished","_tryRetarget","extra","FakeRunner","mergeWith","getRunnerTransform","mergeTransforms","runners","netTransform","_transformationRunners","RunnerArray","ids","clearBefore","deleteCnt","edit","newRunner","getByID","lastRunner","condition","by","_clearTransformRunnersBefore","currentRunner","_currentTransform","_addRunner","difference","styleAttr","nameOrAttrs","newToAttrs","newKeys","differences","addedFromAttrs","oldFromAttrs","oldToAttrs","newLevel","newPoint","affine","isMatrix","currentAngle","startTransform","setup","undefined","rTarget","rCurrent","possibilities","distances","shortest","affineParameters","newTransforms","_queueNumber","_queueNumberDelta","newTo","_queueObject","Svg","version","nested","Symbol","plain","_build","createTextNode","getComputedTextLength","ax","ay","amove","build","symbol","Text","_rebuild","self","blankLineOffset","fontSize","getComputedStyle","getPropertyValue","newLined","firstLine","nodeType","newLine","textable","Tspan","tspan","Circle","circle","ClipPath","unclip","clip","clipper","clipWith","ForeignObject","child","foreignObject","G","containerGeometry","group","link","unlink","linker","linkTo","Mask","unmask","mask","masker","maskWith","Stop","cssRule","rule","Style","addText","fontFamily","fontface","TextPath","track","pathArray","textPath","importNodes","Use","use","file","SVG"],"mappings":"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","file":"src.154a5773.js","sourceRoot":"src","sourcesContent":["/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Fragment from './elements/Fragment.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport {\r\n  getWindow,\r\n  registerWindow,\r\n  restoreWindow,\r\n  saveWindow,\r\n  withWindow\r\n} from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Fragment } from './elements/Fragment.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Gradient,\r\n  Runner\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\nextend([ Container, Fragment ], getMethodsFor('Container'))\r\nextend(Gradient, getMethodsFor('Gradient'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray\r\n])\r\n\r\nmakeMorphable()\r\n","const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (const _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (const _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n","// Map function\r\nexport function map (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to dash separated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\n/**\r\n * This function adds support for string origins.\r\n * It searches for an origin in o.origin o.ox and o.originX.\r\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\r\n**/\r\nexport function getOrigin (o, element) {\r\n  const origin = o.origin\r\n  // First check if origin is in ox or originX\r\n  let ox = o.ox != null\n    ? o.ox\r\n    : o.originX != null\n      ? o.originX\r\n      : 'center'\r\n  let oy = o.oy != null\n    ? o.oy\r\n    : o.originY != null\n      ? o.originY\r\n      : 'center'\r\n\r\n  // Then check if origin was used and overwrite in that case\r\n  if (origin != null) {\r\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\r\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\r\n        : [ origin, origin ]\r\n  }\r\n\r\n  // Make sure to only call bbox when actually needed\r\n  const condX = typeof ox === 'string'\r\n  const condY = typeof oy === 'string'\r\n  if (condX || condY) {\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // And only overwrite if string was passed for this specific axis\r\n    if (condX) {\r\n      ox = ox.includes('left')\n        ? x\r\n        : ox.includes('right')\n          ? x + width\r\n          : x + width / 2\r\n    }\r\n\r\n    if (condY) {\r\n      oy = oy.includes('top')\n        ? y\r\n        : oy.includes('bottom')\n          ? y + height\r\n          : y + height / 2\r\n    }\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n","// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n","export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n","export default class Base {\r\n  // constructor (node/*, {extensions = []} */) {\r\n  //   // this.tags = []\r\n  //   //\r\n  //   // for (let extension of extensions) {\r\n  //   //   extension.setup.call(this, node)\r\n  //   //   this.tags.push(extension.name)\r\n  //   // }\r\n  // }\r\n}\r\n","import { addMethodNames } from './methods.js'\r\nimport { capitalize } from './utils.js'\r\nimport { svg } from '../modules/core/namespaces.js'\r\nimport { globals } from '../utils/window.js'\r\nimport Base from '../types/Base.js'\r\n\r\nconst elements = {}\r\nexport const root = '___SYMBOL___ROOT___'\r\n\r\n// Method for element creation\r\nexport function create (name, ns = svg) {\r\n  // create element\r\n  return globals.document.createElementNS(ns, name)\r\n}\r\n\r\nexport function makeInstance (element, isHTML = false) {\r\n  if (element instanceof Base) return element\r\n\r\n  if (typeof element === 'object') {\r\n    return adopter(element)\r\n  }\r\n\r\n  if (element == null) {\r\n    return new elements[root]()\r\n  }\r\n\r\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\r\n    return adopter(globals.document.querySelector(element))\r\n  }\r\n\r\n  // Make sure, that HTML elements are created with the correct namespace\r\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\r\n  wrapper.innerHTML = element\r\n\r\n  // We can use firstChild here because we know,\r\n  // that the first char is < and thus an element\r\n  element = adopter(wrapper.firstChild)\r\n\r\n  // make sure, that element doesnt have its wrapper attached\r\n  wrapper.removeChild(wrapper.firstChild)\r\n  return element\r\n}\r\n\r\nexport function nodeOrNew (name, node) {\r\n  return node instanceof globals.window.Node ? node : create(name)\r\n}\r\n\r\n// Adopt existing svg elements\r\nexport function adopt (node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance instanceof Base) return node.instance\r\n\r\n  if (node.nodeName === '#document-fragment') {\r\n    return new elements.Fragment(node)\r\n  }\r\n\r\n  // initialize variables\r\n  let className = capitalize(node.nodeName || 'Dom')\r\n\r\n  // Make sure that gradients are adopted correctly\r\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\r\n    className = 'Gradient'\r\n\r\n  // Fallback to Dom if element is not known\r\n  } else if (!elements[className]) {\r\n    className = 'Dom'\r\n  }\r\n\r\n  return new elements[className](node)\r\n}\r\n\r\nlet adopter = adopt\r\n\r\nexport function mockAdopt (mock = adopt) {\r\n  adopter = mock\r\n}\r\n\r\nexport function register (element, name = element.name, asRoot = false) {\r\n  elements[name] = element\r\n  if (asRoot) elements[root] = element\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\r\n\r\n  return element\r\n}\r\n\r\nexport function getClass (name) {\r\n  return elements[name]\r\n}\r\n\r\n// Element id sequence\r\nlet did = 1000\r\n\r\n// Get next named element id\r\nexport function eid (name) {\r\n  return 'Svgjs' + capitalize(name) + (did++)\r\n}\r\n\r\n// Deep new id assignment\r\nexport function assignNewId (node) {\r\n  // do the same for SVG child nodes as well\r\n  for (let i = node.children.length - 1; i >= 0; i--) {\r\n    assignNewId(node.children[i])\r\n  }\r\n\r\n  if (node.id) {\r\n    node.id = eid(node.nodeName)\r\n    return node\r\n  }\r\n\r\n  return node\r\n}\r\n\r\n// Method for extending objects\r\nexport function extend (modules, methods) {\r\n  let key, i\r\n\r\n  modules = Array.isArray(modules) ? modules : [ modules ]\r\n\r\n  for (i = modules.length - 1; i >= 0; i--) {\r\n    for (key in methods) {\r\n      modules[i].prototype[key] = methods[key]\r\n    }\r\n  }\r\n}\r\n\r\nexport function wrapWithAttrCheck (fn) {\r\n  return function (...args) {\r\n    const o = args[args.length - 1]\r\n\r\n    if (o && o.constructor === Object && !(o instanceof Array)) {\r\n      return fn.apply(this, args.slice(0, -1)).attr(o)\r\n    } else {\r\n      return fn.apply(this, args)\r\n    }\r\n  }\r\n}\r\n","import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the current position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.add(this.remove(), i + 1)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  p.add(this.remove(), i ? i - 1 : 0)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  const p = this.parent()\r\n\r\n  // Move node forward\r\n  p.add(this.remove())\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  const p = this.parent()\r\n\r\n  // Move node back\r\n  p.add(this.remove(), 0)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n","// Parse unit value\r\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\r\n\r\n// splits a transformation chain\r\nexport const transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport const whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\r\n\r\n// Test rgb value\r\nexport const isRgb = /^rgb\\(/\r\n\r\n// Test for blank string\r\nexport const isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for image url\r\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport const delimiter = /[\\s,]+/\r\n\r\n// Test for path letter\r\nexport const isPathLetter = /[MLHVCSQTAZ]/i\r\n","import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  const attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    const array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n","import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  const ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        const t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties as array\r\n    if (Array.isArray(style)) {\r\n      for (const name of style) {\r\n        const cased = camelCase(name)\r\n        ret[cased] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (const name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n","import { registerMethods } from '../../utils/methods.js'\r\nimport { filter, map } from '../../utils/utils.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (a == null) {\r\n    // get an object of attributes\r\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\r\n  } else if (a instanceof Array) {\r\n    const data = {}\r\n    for (const key of a) {\r\n      data[key] = this.data(key)\r\n    }\r\n    return data\r\n  } else if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null\n        ? null\r\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\r\n          : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n","import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (const key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (let i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n","\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\r\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  // Test if given value is a color\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\n\n  /*\r\n  Generating random colors\r\n  */\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    } else {\r\n\r\n      throw new Error('Unsupported random color mode')\r\n\r\n    }\r\n  }\n\n  // Test if given value is a color string\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\n\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\n\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey\n      ? 0\r\n      : l > 0.5\n        ? delta / (2 - max - min)\r\n        : delta / (max + min)\r\n    const h = isGrey\n      ? 0\r\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n        : max === g\n          ? ((b - r) / delta + 2) / 6\r\n          : max === b\n            ? ((r - g) / delta + 4) / 6\r\n            : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (const component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error('Unsupported string format, can\\'t construct Color')\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\r\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\r\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\r\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\r\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\r\n                : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\n\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          const { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      const pow = Math.pow\r\n      const bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        const color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\n  toArray () {\r\n    const { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\n\n  toHex () {\r\n    const [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\n\n  toRgb () {\r\n    const [ rV, gV, bV ] = this._clamped()\r\n    const string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\n\n  toString () {\r\n    return this.toHex()\r\n  }\n\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    const { _a, _b, _c } = this.rgb()\r\n    const { max, min, round } = Math\r\n    const format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n}\r\n","import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Clone point\n  clone () {\r\n    return new Point(this)\r\n  }\n\n  init (x, y) {\r\n    const base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\r\n        : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\n\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    const { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    const flipBoth = o.flip === 'both' || o.flip === true\r\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewX)\n          ? o.skewX\r\n          : 0\r\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewY)\n          ? o.skewY\r\n          : 0\r\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\r\n      : isFinite(o.scale)\n        ? o.scale * flipX\r\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\r\n          : flipX\r\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\r\n      : isFinite(o.scale)\n        ? o.scale * flipY\r\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\r\n          : flipY\r\n    const shear = o.shear || 0\r\n    const theta = o.rotate || o.theta || 0\r\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    const ox = origin.x\r\n    const oy = origin.y\r\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. Thats why NaN\r\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\r\n    const px = position.x\r\n    const py = position.y\r\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    const tx = translate.x\r\n    const ty = translate.y\r\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    const rx = relative.x\r\n    const ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\n\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\n\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    const a = l.a * r.a + l.c * r.b\r\n    const b = l.b * r.a + l.d * r.b\r\n    const c = l.a * r.c + l.c * r.d\r\n    const d = l.b * r.c + l.d * r.d\r\n    const e = l.e + l.a * r.e + l.c * r.f\r\n    const f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\n\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\r\n    const dx = cx || 0\r\n    const dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\n\n  // Clones this matrix\n  clone () {\r\n    return new Matrix(this)\r\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    const determinant = a * d - b * c\r\n    const ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    const sx = ccw * Math.sqrt(a * a + b * b)\r\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    const theta = 180 / Math.PI * thetaRad\r\n    const ct = Math.cos(thetaRad)\r\n    const st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    const lam = (a * c + b * d) / determinant\r\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\r\n    if (other === this) return true\r\n    const comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\n\n  flipO (axis, around) {\r\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\r\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\n\n  // Initialize\r\n  init (source) {\r\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element\n      ? source.matrixify()\r\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\r\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\r\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\r\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\r\n                : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\n\n  // Inverses matrix\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    const det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    const na = d / det\r\n    const nb = -b / det\r\n    const nc = -c / det\r\n    const nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    const ne = -(na * e + nc * f)\r\n    const nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\n\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\n\n  lmultiplyO (matrix) {\r\n    const r = this\r\n    const l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\n\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    const l = this\r\n    const r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    const cos = Math.cos(r)\r\n    const sin = Math.sin(r)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    const lx = Math.tan(x)\r\n    const ly = Math.tan(y)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\n\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\n\n  // Convert matrix to string\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      const matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    const t = Matrix.formatTransforms(o)\r\n    const current = this\r\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    const transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      // Doesnt work because t.px is also 0 if it wasnt passed\r\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\r\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    const rect = this.rect(1, 1)\r\n    const m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix, 'Matrix')\r\n","import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    const svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n    svg.attr('aria-hidden', 'true')\r\n\r\n    const path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    const b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nexport function isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nexport function domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return new Box(this)\r\n  }\r\n\r\n  init (source) {\r\n    const base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source)\n        ? source\r\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\r\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n          : arguments.length === 4\n            ? [].slice.call(arguments)\r\n            : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    const x = Math.min(this.x, box.x)\r\n    const y = Math.min(this.y, box.y)\r\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    const pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction getBox (el, getBBoxFn, retry) {\r\n  let box\r\n\r\n  try {\r\n    // Try to get the box with the provided function\r\n    box = getBBoxFn(el.node)\r\n\r\n    // If the box is worthless and not even in the dom, retry\r\n    // by throwing an error here...\r\n    if (isNulledBox(box) && !domContains(el.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    // ... and calling the retry handler here\r\n    box = retry(el)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  // Function to get bbox is getBBox()\r\n  const getBBox = (node) => node.getBBox()\r\n\r\n  // Take all measures so that a stupid browser renders the element\r\n  // so we can get the bbox from it when we try again\r\n  const retry = (el) => {\r\n    try {\r\n      const clone = el.clone().addTo(parser().svg).show()\r\n      const box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      // We give up...\r\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\r\n    }\r\n  }\r\n\r\n  const box = getBox(this, getBBox, retry)\r\n  const bbox = new Box(box)\r\n\r\n  return bbox\r\n}\r\n\r\nexport function rbox (el) {\r\n  const getRBox = (node) => node.getBoundingClientRect()\r\n  const retry = (el) => {\r\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\r\n    // it obviously will be at the wrong position\r\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\r\n  }\r\n\r\n  const box = getBox(this, getRBox, retry)\r\n  const rbox = new Box(box)\r\n\r\n  // If an element was passed, we want the bbox in the coordinate system of that element\r\n  if (el) {\r\n    return rbox.transform(el.screenCTM().inverseO())\r\n  }\r\n\r\n  // Else we want it in absolute screen coordinates\r\n  // Therefore we need to add the scrollOffset\r\n  return rbox.addOffset()\r\n}\r\n\r\n// Checks whether the given point is inside the bounding box\r\nexport function inside (x, y) {\r\n  const box = this.bbox()\r\n\r\n  return x > box.x\r\n    && y > box.y\r\n    && x < box.x + box.width\r\n    && y < box.y + box.height\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      // Its best to rely on the attributes here and here is why:\r\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\r\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\r\n      //                        that means, their clientRect is always as big as the content.\r\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\r\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\r\n      // getBBox: returns the bounding box of its content - that doesnt help!\r\n      let { width, height } = this.attr([ 'width', 'height' ])\r\n\r\n      // Width and height is a string when a number with a unit is present which we can't use\r\n      // So we try clientXYZ\r\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\r\n        width = this.node.clientWidth\r\n        height = this.node.clientHeight\r\n      }\r\n\r\n      // Giving up...\r\n      if (!width || !height) {\r\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\r\n      }\r\n\r\n      const v = this.viewbox()\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n\r\n      // Set the zoomAmount to the highest value which is safe to process and recover from\r\n      // The * 100 is a bit of wiggle room for the matrix transformation\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box, 'Box')\r\n","import { extend } from '../utils/adopter.js'\r\n// import { subClassArray } from './ArrayPolyfill.js'\r\n\r\nclass List extends Array {\r\n  constructor (arr = [], ...args) {\r\n    super(arr, ...args)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...arr)\r\n  }\r\n}\r\n\r\n/* = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n}) */\r\n\r\nexport default List\r\n\r\nextend([ List ], {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el, i, arr) => {\r\n        return fnOrMethodName.call(el, el, i, arr)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = [ 'toArray', 'constructor', 'each' ]\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend([ List ], methods)\r\n}\r\n","import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n","import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nexport const windowEvents = {}\r\n\r\nexport function getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nexport function getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nexport function clearEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n  if (n === globals.window) n = windowEvents\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  const l = listener.bind(binding || node)\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event.split('.')[0]\r\n    const ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event && event.split('.')[0]\r\n    const ns = event && event.split('.')[1]\r\n    let namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data, options) {\r\n  const n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n","import { dispatch, off, on } from '../modules/core/event.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Base from './Base.js'\r\n\r\nexport default class EventTarget extends Base {\r\n  addEventListener () {}\r\n\r\n  dispatch (event, data, options) {\r\n    return dispatch(this, event, data, options)\r\n  }\r\n\r\n  dispatchEvent (event) {\r\n    const bag = this.getEventHolder().events\r\n    if (!bag) return true\r\n\r\n    const events = bag[event.type]\r\n\r\n    for (const i in events) {\r\n      for (const j in events[i]) {\r\n        events[i][j](event)\r\n      }\r\n    }\r\n\r\n    return !event.defaultPrevented\r\n  }\r\n\r\n  // Fire given event\r\n  fire (event, data, options) {\r\n    this.dispatch(event, data, options)\r\n    return this\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this\r\n  }\r\n\r\n  // Unbind event from listener\r\n  off (event, listener) {\r\n    off(this, event, listener)\r\n    return this\r\n  }\r\n\r\n  // Bind given event to listener\r\n  on (event, listener, binding, options) {\r\n    on(this, event, listener, binding, options)\r\n    return this\r\n  }\r\n\r\n  removeEventListener () {}\r\n}\r\n\r\nregister(EventTarget, 'EventTarget')\r\n","\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport const timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport const attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\n\r\nexport default class SVGArray extends Array {\r\n  constructor (...args) {\r\n    super(...args)\r\n    this.init(...args)\r\n  }\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  }\n\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  }\r\n\r\n  // Parse whitespace separated string\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  }\n\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\n\n  toString () {\r\n    return this.join(' ')\r\n  }\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  }\r\n\r\n}\r\n","import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit conversions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's'\n        ? this.value / 1e3\r\n        : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n}\r\n","import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (const node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null\n      ? defaults[attr]\r\n      : isNumber.test(val)\n        ? parseFloat(val)\r\n        : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n","import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { svg, html } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super()\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    // If non-root svg nodes are added we have to remove their namespaces\r\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\r\n      element.removeNamespace()\r\n    }\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent, i) {\r\n    return makeInstance(parent).put(this, i)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone (deep = true) {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return new this.constructor(assignNewId(this.node.cloneNode(deep)))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    const children = this.children()\r\n    let i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName, attrs) {\r\n    return this.put(new Dom(create(nodeName), attrs))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  html (htmlOrFn, outerHTML) {\r\n    return this.xml(htmlOrFn, outerHTML, html)\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // don't set directly with this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\r\n    return matcher && matcher.call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    let parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    do {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n    } while ((parent = adopt(parent.node.parentNode)))\r\n\r\n    return parent\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    element = makeInstance(element)\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent, i) {\r\n    return makeInstance(parent).add(this, i)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n\r\n    if (this.node.parentNode) {\r\n      this.node.parentNode.replaceChild(element.node, this.node)\r\n    }\r\n\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map = null) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr(map)\r\n\r\n    for (const i in attrs) {\r\n      if (typeof attrs[i] === 'number') {\r\n        attrs[i] = Math.round(attrs[i] * factor) / factor\r\n      }\r\n    }\r\n\r\n    this.attr(attrs)\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  svg (svgOrFn, outerSVG) {\r\n    return this.xml(svgOrFn, outerSVG, svg)\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  wrap (node) {\r\n    const parent = this.parent()\r\n\r\n    if (!parent) {\r\n      return this.addTo(node)\r\n    }\r\n\r\n    const position = parent.index(this)\r\n    return parent.put(node, position).put(this)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  xml (xmlOrFn, outerXML, ns) {\r\n    if (typeof xmlOrFn === 'boolean') {\r\n      ns = outerXML\r\n      outerXML = xmlOrFn\r\n      xmlOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerXML = outerXML == null ? true : outerXML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (xmlOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerXML) {\r\n          const result = xmlOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          const result = xmlOrFn(this)\r\n          const _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerXML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerXML = outerXML == null ? false : outerXML\r\n\r\n    // Create temporary holder\r\n    const well = create('wrapper', ns)\r\n    const fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = xmlOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (let len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    const parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerXML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom, 'Dom')\r\n","import { bbox, rbox, inside } from '../types/Box.js'\r\nimport { ctm, screenCTM } from '../types/Matrix.js'\r\nimport {\r\n  extend,\r\n  getClass,\r\n  makeInstance,\r\n  register,\r\n  root\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { point } from '../types/Point.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { reference } from '../modules/core/regex.js'\r\nimport Dom from './Dom.js'\r\nimport List from '../types/List.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nexport default class Element extends Dom {\r\n  constructor (node, attrs) {\r\n    super(node, attrs)\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    this.node.instance = this\r\n\r\n    if (node.hasAttribute('svgjs:data')) {\r\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n    }\r\n  }\r\n\r\n  // Move element by its center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n\r\n  // Move by center over x-axis\r\n  cx (x) {\r\n    return x == null\r\n      ? this.x() + this.width() / 2\r\n      : this.x(x - this.width() / 2)\r\n  }\r\n\r\n  // Move by center over y-axis\r\n  cy (y) {\r\n    return y == null\r\n      ? this.y() + this.height() / 2\r\n      : this.y(y - this.height() / 2)\r\n  }\r\n\r\n  // Get defs\r\n  defs () {\r\n    const root = this.root()\r\n    return root && root.defs()\r\n  }\r\n\r\n  // Relative move over x and y axes\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n\r\n  // Relative move over x axis\r\n  dx (x = 0) {\r\n    return this.x(new SVGNumber(x).plus(this.x()))\r\n  }\r\n\r\n  // Relative move over y axis\r\n  dy (y = 0) {\r\n    return this.y(new SVGNumber(y).plus(this.y()))\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this\r\n  }\n\n  // Set height of element\n  height (height) {\r\n    return this.attr('height', height)\r\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\r\n    until = makeInstance(until)\r\n    const parents = new List()\r\n    let parent = this\r\n\r\n    while (\r\n      (parent = parent.parent())\r\n      && parent.node !== globals.document\r\n      && parent.nodeName !== '#document-fragment') {\r\n\r\n      parents.push(parent)\r\n\r\n      if (parent.node === until.node) {\r\n        break\r\n      }\r\n    }\r\n\r\n    return parents\r\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\r\n    attr = this.attr(attr)\r\n    if (!attr) return null\r\n\r\n    const m = (attr + '').match(reference)\r\n    return m ? makeInstance(m[1]) : null\r\n  }\n\n  // Get parent document\r\n  root () {\r\n    const p = this.parent(getClass(root))\r\n    return p && p.root()\r\n  }\r\n\r\n  // set given data to the elements data property\r\n  setData (o) {\r\n    this.dom = o\r\n    return this\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .width(new SVGNumber(p.width))\r\n      .height(new SVGNumber(p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('width', width)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // remove previously set data\r\n    this.node.removeAttribute('svgjs:data')\r\n\r\n    if (Object.keys(this.dom).length) {\r\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n    }\r\n\r\n    return super.writeDataToDom()\r\n  }\r\n\r\n  // Move over x-axis\r\n  x (x) {\r\n    return this.attr('x', x)\r\n  }\r\n\r\n  // Move over y-axis\r\n  y (y) {\r\n    return this.attr('y', y)\r\n  }\r\n}\r\n\r\nextend(Element, {\r\n  bbox, rbox, inside, point, ctm, screenCTM\r\n})\r\n\r\nregister(Element, 'Element')\r\n","import { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nconst sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  const extension = {}\r\n  let i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction = 'both', origin = 'center') {\r\n    if ('xybothtrue'.indexOf(direction) === -1) {\r\n      origin = direction\r\n      direction = 'both'\r\n    }\r\n\r\n    return this.transform({ flip: direction, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y = x) {\r\n    const type = (this._element || this).type\r\n    return type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      this.off(event)\r\n    } else {\r\n      this.on(event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n","import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  const matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      const kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent, i) {\r\n  if (this === parent) return this\r\n  const ctm = this.screenCTM()\r\n  const pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot (i) {\r\n  return this.toParent(this.root(), i)\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    const decomposed = new Matrix(this).decompose()\r\n    return o == null ? decomposed : decomposed[o]\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  const cleanRelative = relative === true ? this : (relative || false)\r\n  const result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent = this, index) {\r\n    this.each(function () {\r\n      if (this instanceof Container) {\r\n        return this.flatten().ungroup()\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent = this.parent(), index = parent.index(this)) {\r\n    // when parent != this, we want append all elements to the end\r\n    index = index === -1 ? parent.children().length : index\r\n\r\n    this.each(function (i, children) {\r\n      // reverse each\r\n      return children[children.length - i - 1].toParent(parent, index)\r\n    })\r\n\r\n    return this.remove()\r\n  }\r\n}\r\n\r\nregister(Container, 'Container')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('defs', node), attrs)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\r\n\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs, 'Defs')\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape, 'Shape')\r\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('ellipse', node), attrs)\r\n  }\r\n\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse, 'Ellipse')\r\n","import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient (...args) {\r\n      return this.defs().gradient(...args)\r\n    }\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient, 'Gradient')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('pattern', node), attrs)\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern, 'Pattern')\r\n","import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('image', node), attrs)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    const img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      const p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image, 'Image')\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport Box from './Box.js'\r\nimport Matrix from './Matrix.js'\r\n\r\nexport default class PointArray extends SVGArray {\r\n  // Get bounding box of points\r\n  bbox () {\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let minX = Infinity\r\n    let minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return new Box(minX, minY, maxX - minX, maxY - minY)\r\n  }\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (let i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ 0, 0 ]) {\r\n    const points = []\r\n\r\n    // if it is an array, we flatten it and therefore clone it to 1 depths\r\n    if (array instanceof Array) {\r\n      array = Array.prototype.concat.apply([], array)\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    let i\r\n    const box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    const array = []\r\n    // convert to a poly point string\r\n    for (let i = 0, il = this.length; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    for (let i = this.length; i--;) {\r\n      // Perform the matrix multiplication\r\n      const [ x, y ] = this[i]\r\n      this[i][0] = m.a * x + m.c * y + m.e\r\n      this[i][1] = m.b * x + m.d * y + m.f\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n","import PointArray from '../../types/PointArray.js'\r\n\r\nexport const MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  const b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  const b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('line', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1, y1, x2, y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line, 'Line')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('marker', node), attrs)\r\n  }\r\n\r\n  // Set height of element\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\n\n  orient (orient) {\r\n    return this.attr('orient', orient)\r\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\n\n  // Return the fill id\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\n\n  // Update marker\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\n\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      let attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker, 'Marker')\r\n","import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[k]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport const easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn = timeline.ease) {\r\n    super()\r\n    this.ease = easing[fn] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\n\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  const duration = (this._duration || 500) / 1000\r\n  const overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  const eps = 1e-10\r\n  const pi = Math.PI\r\n  const os = Math.log(overshoot / 100 + eps)\r\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  const wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration = 500, overshoot = 0) {\r\n    super()\r\n    this.duration(duration)\r\n      .overshoot(overshoot)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    const velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    const acceleration = -this.d * velocity - this.k * (current - target)\r\n    const newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\r\n    super()\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    const p = target - current\r\n    let i = (c.integral || 0) + p * dt\r\n    const d = (p - (c.error || 0)) / dt\r\n    const windup = this._windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('_windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n","import { isPathLetter } from '../modules/core/regex.js'\r\nimport Point from '../types/Point.js'\r\n\r\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (let j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nfunction makeAbsolut (parser) {\r\n  const command = parser.segment[0]\r\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\r\n}\r\n\r\nfunction segmentComplete (parser) {\r\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\r\n}\r\n\r\nfunction startNewSegment (parser, token) {\r\n  parser.inNumber && finalizeNumber(parser, false)\r\n  const pathLetter = isPathLetter.test(token)\r\n\r\n  if (pathLetter) {\r\n    parser.segment = [ token ]\r\n  } else {\r\n    const lastCommand = parser.lastCommand\r\n    const small = lastCommand.toLowerCase()\r\n    const isSmall = lastCommand === small\r\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\r\n  }\r\n\r\n  parser.inSegment = true\r\n  parser.lastCommand = parser.segment[0]\r\n\r\n  return pathLetter\r\n}\r\n\r\nfunction finalizeNumber (parser, inNumber) {\r\n  if (!parser.inNumber) throw new Error('Parser Error')\r\n  parser.number && parser.segment.push(parseFloat(parser.number))\r\n  parser.inNumber = inNumber\r\n  parser.number = ''\r\n  parser.pointSeen = false\r\n  parser.hasExponent = false\r\n\r\n  if (segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n}\r\n\r\nfunction finalizeSegment (parser) {\r\n  parser.inSegment = false\r\n  if (parser.absolute) {\r\n    parser.segment = makeAbsolut(parser)\r\n  }\r\n  parser.segments.push(parser.segment)\r\n}\r\n\r\nfunction isArcFlag (parser) {\r\n  if (!parser.segment.length) return false\r\n  const isArc = parser.segment[0].toUpperCase() === 'A'\r\n  const length = parser.segment.length\r\n\r\n  return isArc && (length === 4 || length === 5)\r\n}\r\n\r\nfunction isExponential (parser) {\r\n  return parser.lastToken.toUpperCase() === 'E'\r\n}\r\n\r\nexport function pathParser (d, toAbsolute = true) {\r\n\r\n  let index = 0\r\n  let token = ''\r\n  const parser = {\r\n    segment: [],\r\n    inNumber: false,\r\n    number: '',\r\n    lastToken: '',\r\n    inSegment: false,\r\n    segments: [],\r\n    pointSeen: false,\r\n    hasExponent: false,\r\n    absolute: toAbsolute,\r\n    p0: new Point(),\r\n    p: new Point()\r\n  }\r\n\r\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\r\n    if (!parser.inSegment) {\r\n      if (startNewSegment(parser, token)) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (token === '.') {\r\n      if (parser.pointSeen || parser.hasExponent) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.inNumber = true\r\n      parser.pointSeen = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (!isNaN(parseInt(token))) {\r\n\r\n      if (parser.number === '0' || isArcFlag(parser)) {\r\n        parser.inNumber = true\r\n        parser.number = token\r\n        finalizeNumber(parser, true)\r\n        continue\r\n      }\r\n\r\n      parser.inNumber = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (token === ' ' || token === ',') {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (token === '-') {\r\n      if (parser.inNumber && !isExponential(parser)) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.number += token\r\n      parser.inNumber = true\r\n      continue\r\n    }\r\n\r\n    if (token.toUpperCase() === 'E') {\r\n      parser.number += token\r\n      parser.hasExponent = true\r\n      continue\r\n    }\r\n\r\n    if (isPathLetter.test(token)) {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      } else if (!segmentComplete(parser)) {\r\n        throw new Error('parser Error')\r\n      } else {\r\n        finalizeSegment(parser)\r\n      }\r\n      --index\r\n    }\r\n  }\r\n\r\n  if (parser.inNumber) {\r\n    finalizeNumber(parser, false)\r\n  }\r\n\r\n  if (parser.inSegment && segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n\r\n  return parser.segments\r\n\r\n}\r\n","import SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\nimport Box from './Box.js'\r\nimport { pathParser } from '../utils/pathParser.js'\r\n\r\nfunction arrayToString (a) {\r\n  let s = ''\r\n  for (let i = 0, il = a.length; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nexport default class PathArray extends SVGArray {\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return new Box(parser.nodes.path.getBBox())\r\n  }\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Absolutize and parse path to array\r\n  parse (d = 'M0 0') {\r\n    if (Array.isArray(d)) {\r\n      d = Array.prototype.concat.apply([], d).toString()\r\n    }\r\n\r\n    return pathParser(d)\r\n  }\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n    let i, l\r\n\r\n    // If the box width or height is 0 then we ignore\r\n    // transformations on the respective axis\r\n    box.width = box.width === 0 ? 1 : box.width\r\n    box.height = box.height === 0 ? 1 : box.height\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  }\r\n\r\n}\r\n","import { Ease } from './Controller.js'\r\nimport {\r\n  delimiter,\r\n  numberAndUnit,\r\n  isPathLetter\r\n} from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport Color from '../types/Color.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport SVGArray from '../types/SVGArray.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nconst getClassForType = (value) => {\r\n  const type = typeof value\r\n\r\n  if (type === 'number') {\r\n    return SVGNumber\r\n  } else if (type === 'string') {\r\n    if (Color.isColor(value)) {\r\n      return Color\r\n    } else if (delimiter.test(value)) {\r\n      return isPathLetter.test(value)\r\n        ? PathArray\r\n        : SVGArray\r\n    } else if (numberAndUnit.test(value)) {\r\n      return SVGNumber\r\n    } else {\r\n      return NonMorphable\r\n    }\r\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\r\n    return value.constructor\r\n  } else if (Array.isArray(value)) {\r\n    return SVGArray\r\n  } else if (type === 'object') {\r\n    return ObjectBag\r\n  } else {\r\n    return NonMorphable\r\n  }\r\n}\r\n\r\nexport default class Morphable {\r\n  constructor (stepper) {\r\n    this._stepper = stepper || new Ease('-')\r\n\r\n    this._from = null\r\n    this._to = null\r\n    this._type = null\r\n    this._context = null\r\n    this._morphObj = null\r\n  }\r\n\r\n  at (pos) {\r\n    const _this = this\r\n\r\n    return this._morphObj.fromArray(\r\n      this._from.map(function (i, index) {\r\n        return _this._stepper.step(i, _this._to[index], pos, _this._context[index], _this._context)\r\n      })\r\n    )\r\n  }\r\n\r\n  done () {\r\n    const complete = this._context\r\n      .map(this._stepper.done)\r\n      .reduce(function (last, curr) {\r\n        return last && curr\r\n      }, true)\r\n    return complete\r\n  }\r\n\r\n  from (val) {\r\n    if (val == null) {\r\n      return this._from\r\n    }\r\n\r\n    this._from = this._set(val)\r\n    return this\r\n  }\r\n\r\n  stepper (stepper) {\r\n    if (stepper == null) return this._stepper\r\n    this._stepper = stepper\r\n    return this\r\n  }\r\n\r\n  to (val) {\r\n    if (val == null) {\r\n      return this._to\r\n    }\r\n\r\n    this._to = this._set(val)\r\n    return this\r\n  }\r\n\r\n  type (type) {\r\n    // getter\r\n    if (type == null) {\r\n      return this._type\r\n    }\r\n\r\n    // setter\r\n    this._type = type\r\n    return this\r\n  }\r\n\r\n  _set (value) {\r\n    if (!this._type) {\r\n      this.type(getClassForType(value))\r\n    }\r\n\r\n    let result = (new this._type(value))\r\n    if (this._type === Color) {\r\n      result = this._to\n        ? result[this._to[4]]()\r\n        : this._from\n          ? result[this._from[4]]()\r\n          : result\r\n    }\r\n\r\n    if (this._type === ObjectBag) {\r\n      result = this._to\n        ? result.align(this._to)\r\n        : this._from\n          ? result.align(this._from)\r\n          : result\r\n    }\r\n\r\n    result = result.toArray()\r\n\r\n    this._morphObj = this._morphObj || new this._type()\r\n    this._context = this._context\r\n      || Array.apply(null, Array(result.length))\r\n        .map(Object)\r\n        .map(function (o) {\r\n          o.done = true\r\n          return o\r\n        })\r\n    return result\r\n  }\r\n\r\n}\r\n\r\nexport class NonMorphable {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (val) {\r\n    val = Array.isArray(val) ? val[0] : val\r\n    this.value = val\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value ]\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n}\r\n\r\nexport class TransformBag {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (obj) {\r\n    if (Array.isArray(obj)) {\r\n      obj = {\r\n        scaleX: obj[0],\r\n        scaleY: obj[1],\r\n        shear: obj[2],\r\n        rotate: obj[3],\r\n        translateX: obj[4],\r\n        translateY: obj[5],\r\n        originX: obj[6],\r\n        originY: obj[7]\r\n      }\r\n    }\r\n\r\n    Object.assign(this, TransformBag.defaults, obj)\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    const v = this\r\n\r\n    return [\r\n      v.scaleX,\r\n      v.scaleY,\r\n      v.shear,\r\n      v.rotate,\r\n      v.translateX,\r\n      v.translateY,\r\n      v.originX,\r\n      v.originY\r\n    ]\r\n  }\r\n}\r\n\r\nTransformBag.defaults = {\r\n  scaleX: 1,\r\n  scaleY: 1,\r\n  shear: 0,\r\n  rotate: 0,\r\n  translateX: 0,\r\n  translateY: 0,\r\n  originX: 0,\r\n  originY: 0\r\n}\r\n\r\nconst sortByKey = (a, b) => {\r\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\r\n}\r\n\r\nexport class ObjectBag {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  align (other) {\r\n    for (let i = 0, il = this.values.length; i < il; ++i) {\r\n      if (this.values[i] === Color) {\r\n        const space = other[i + 6]\r\n        const color = new Color(this.values.splice(i + 2, 5))[space]().toArray()\r\n        this.values.splice(i + 2, 0, ...color)\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  init (objOrArr) {\r\n    this.values = []\r\n\r\n    if (Array.isArray(objOrArr)) {\r\n      this.values = objOrArr.slice()\r\n      return\r\n    }\r\n\r\n    objOrArr = objOrArr || {}\r\n    const entries = []\r\n\r\n    for (const i in objOrArr) {\r\n      const Type = getClassForType(objOrArr[i])\r\n      const val = new Type(objOrArr[i]).toArray()\r\n      entries.push([ i, Type, val.length, ...val ])\r\n    }\r\n\r\n    entries.sort(sortByKey)\r\n\r\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return this.values\r\n  }\r\n\r\n  valueOf () {\r\n    const obj = {}\r\n    const arr = this.values\r\n\r\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\r\n    while (arr.length) {\r\n      const key = arr.shift()\r\n      const Type = arr.shift()\r\n      const num = arr.shift()\r\n      const values = arr.splice(0, num)\r\n      obj[key] = new Type(values).valueOf()\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n}\r\n\r\nconst morphableTypes = [\r\n  NonMorphable,\r\n  TransformBag,\r\n  ObjectBag\r\n]\r\n\r\nexport function registerMorphableType (type = []) {\r\n  morphableTypes.push(...[].concat(type))\r\n}\r\n\r\nexport function makeMorphable () {\r\n  extend(morphableTypes, {\r\n    to (val) {\r\n      return new Morphable()\r\n        .type(this.constructor)\r\n        .from(this.valueOf())\r\n        .to(val)\r\n    },\r\n    fromArray (arr) {\r\n      this.init(arr)\r\n      return this\r\n    }\r\n  })\r\n}\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('path', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null)\n      ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path, 'Path')\r\n","import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null)\n    ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\r\n      : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  const p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polygon', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon, 'Polygon')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polyline', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline, 'Polyline')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('rect', node), attrs)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect, 'Rect')\r\n","export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  // Shows us the first item in the list\n  first () {\r\n    return this._first && this._first.value\r\n  }\n\n  // Shows us the last item in the list\n  last () {\r\n    return this._last && this._last.value\r\n  }\n\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\n  // Removes the item that was returned from the push\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\n\n  shift () {\r\n    // Check if we have a value\r\n    const remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n}\r\n","import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    const node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    const time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    const node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    const node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    let nextTimeout = null\r\n    const lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    let nextFrame = null\r\n    const lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    let nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n","import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nconst makeSchedule = function (runnerInfo) {\r\n  const start = runnerInfo.start\r\n  const duration = runnerInfo.runner.duration()\r\n  const end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  const w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTimeOfTimeline() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    const lastRunnerInfo = this.getLastRunnerInfo()\r\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  getEndTimeOfTimeline () {\r\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\r\n    return Math.max(0, ...endTimes)\r\n  }\r\n\r\n  getLastRunnerInfo () {\r\n    return this.getRunnerInfoById(this._lastRunnerId)\r\n  }\r\n\r\n  getRunnerInfoById (id) {\r\n    return this._runners[this._runnerIds.indexOf(id)] || null\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  reverse (yes) {\r\n    const currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    const positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? -positive : positive)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations directly\r\n\r\n    let absoluteStartTime = 0\r\n    const endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      const runnerInfo = this.getRunnerInfoById(runner.id)\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else if (when === 'with-last') {\r\n      const lastRunnerInfo = this.getLastRunnerInfo()\r\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n      absoluteStartTime = lastStartTime\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    const index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    const time = this._timeSource()\r\n    let dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attribute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (let k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[k]\r\n      const runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    let runnersLeft = false\r\n    for (let i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[i]\r\n      const runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      const finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        const endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { Controller, Ease, Stepper } from './Controller.js'\r\nimport { extend, register } from '../utils/adopter.js'\r\nimport { from, to } from '../modules/core/gradiented.js'\r\nimport { getOrigin } from '../utils/utils.js'\r\nimport { noop, timeline } from '../modules/core/defaults.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Animator from './Animator.js'\r\nimport Box from '../types/Box.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\r\nimport Point from '../types/Point.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Timeline from './Timeline.js'\r\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    let times = 1\r\n    let swing = false\r\n    let wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    const o = Runner.sanitise(duration, delay, when)\r\n    const runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(o.delay, o.when)\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  loops (p) {\r\n    const loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      const loopsDone = Math.floor(this._time / loopDuration)\r\n      const relativeTime = (this._time - loopsDone * loopDuration)\r\n      const position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    const whole = Math.floor(p)\r\n    const partial = p % 1\r\n    const time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    const x = this._time\r\n    const d = this._duration\r\n    const w = this._wait\r\n    const t = this._times\r\n    const s = this._swing\r\n    const r = this._reverse\r\n    let position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        const backwards = (swinging && !r) || (!swinging && r)\r\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      const endTime = t * (w + d) - w\r\n      position = x <= 0\r\n        ? Math.round(f(1e-5))\r\n        : x < endTime\r\n          ? f(x)\r\n          : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    const loopsDone = Math.floor(this.loops())\r\n    const swingForward = s && (loopsDone % 2 === 0)\r\n    const forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    const timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    const position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    const running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    const duration = this.duration()\r\n    const justStarted = this._lastTime <= 0 && this._time > 0\r\n    const justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    const declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    let converged = false\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    const dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    const timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      const current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      const needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without being ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    let allfinished = true\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      const current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      const converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        const index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget.call(this, target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nRunner.id = 0\r\n\r\nexport class FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  const runners = this._transformationRunners.runners\r\n  const netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nexport class RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    const id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  clearBefore (id) {\r\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    for (let i = 0; i < this.runners.length; ++i) {\r\n      const runner = this.runners[i]\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        const newRunner = runner.mergeWith(lastRunner)\r\n        this.edit(lastRunner.id, newRunner)\r\n        lastRunner = newRunner\r\n        --i\r\n      } else {\r\n        lastRunner = runner\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  remove (id) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      const o = Runner.sanitise(duration, delay, when)\r\n      const timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(o.delay, o.when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n// Will output the elements from array A that are not in the array B\r\nconst difference = (a, b) => a.filter(x => !b.includes(x))\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, nameOrAttrs, val) {\r\n    if (typeof nameOrAttrs === 'string') {\r\n      return this.styleAttr(type, { [nameOrAttrs]: val })\r\n    }\r\n\r\n    let attrs = nameOrAttrs\r\n    if (this._tryRetarget(type, attrs)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(attrs)\r\n    let keys = Object.keys(attrs)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](keys))\r\n    }, function (pos) {\r\n      this.element()[type](morpher.at(pos).valueOf())\r\n      return morpher.done()\r\n    }, function (newToAttrs) {\r\n\r\n      // Check if any new keys were added\r\n      const newKeys = Object.keys(newToAttrs)\r\n      const differences = difference(newKeys, keys)\r\n\r\n      // If their are new keys, initialize them and add them to morpher\r\n      if (differences.length) {\r\n        // Get the values\r\n        const addedFromAttrs = this.element()[type](differences)\r\n\r\n        // Get the already initialized values\r\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\r\n\r\n        // Merge old and new\r\n        Object.assign(oldFromAttrs, addedFromAttrs)\r\n        morpher.from(oldFromAttrs)\r\n      }\r\n\r\n      // Get the object from the morpher\r\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\r\n\r\n      // Merge in new attributes\r\n      Object.assign(oldToAttrs, newToAttrs)\r\n\r\n      // Change morpher target\r\n      morpher.to(oldToAttrs)\r\n\r\n      // Make sure that we save the work we did so we don't need it to do again\r\n      keys = newKeys\r\n      attrs = newToAttrs\r\n    })\r\n\r\n    this._rememberMorpher(type, morpher)\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', level, point)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    const isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      const affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(newTransforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x = 0) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y = 0) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    let from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    let box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner, 'Runner')\r\n","import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('svg', node), attrs)\r\n    this.namespace()\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: svg, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  removeNamespace () {\r\n    return this.attr({ xmlns: null, version: null })\r\n      .attr('xmlns:xlink', null, xmlns)\r\n      .attr('xmlns:svgjs', null, xmlns)\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call root() from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('symbol', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol, 'Symbol')\r\n","import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n\r\n// Move over x-axis\r\n// Text is moved by its bounding box\r\n// text-anchor does NOT matter\r\nexport function x (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.x\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.x)\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.y\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.y)\r\n}\r\n\r\nexport function move (x, y, box = this.bbox()) {\r\n  return this.x(x, box).y(y, box)\r\n}\r\n\r\n// Move center over x-axis\r\nexport function cx (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.cx\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.cx)\r\n}\r\n\r\n// Move center over y-axis\r\nexport function cy (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.cy\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.cy)\r\n}\r\n\r\nexport function center (x, y, box = this.bbox()) {\r\n  return this.cx(x, box).cy(y, box)\r\n}\r\n\r\nexport function ax (x) {\r\n  return this.attr('x', x)\r\n}\r\n\r\nexport function ay (y) {\r\n  return this.attr('y', y)\r\n}\r\n\r\nexport function amove (x, y) {\r\n  return this.ax(x).ay(y)\r\n}\r\n\r\n// Enable / disable build mode\r\nexport function build (build) {\r\n  this._build = !!build\r\n  return this\r\n}\r\n","import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('text', node), attrs)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Set / get leading\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      const self = this\r\n      let blankLineOffset = 0\r\n      const leading = this.dom.leading\r\n\r\n      this.each(function (i) {\r\n        const fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n\r\n        const dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', i ? dy + blankLineOffset : 0)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\n\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      const children = this.node.childNodes\r\n      let firstLine = 0\r\n      text = ''\r\n\r\n      for (let i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = (text + '').split('\\n')\r\n\r\n      // build new lines\r\n      for (let j = 0, jl = text.length; j < jl; j++) {\r\n        this.newLine(text[j])\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text, 'Text')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('tspan', node), attrs)\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Shortcut dx\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\n\n  // Shortcut dy\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\n\n  // Create new line\n  newLine () {\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    // fetch parent\r\n    const text = this.parent()\r\n\r\n    // early return in case we are not in a text element\r\n    if (!(text instanceof Text)) {\r\n      return this\r\n    }\r\n\r\n    const i = text.index(this)\r\n\r\n    const fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    const dy = text.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(i ? dy : 0).attr('x', text.x())\r\n  }\n\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    if (typeof text === 'function') {\r\n      this.clear().build(true)\r\n      text.call(this, this)\r\n      this.build(false)\r\n    } else {\r\n      this.plain(text)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text = '') {\r\n      const tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      return this.put(tspan).text(text)\r\n    })\r\n  },\r\n  Text: {\r\n    newLine: function (text = '') {\r\n      return this.tspan(text).newLine()\r\n    }\r\n  }\r\n})\r\n\r\nregister(Tspan, 'Tspan')\r\n","import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('circle', node), attrs)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size = 0) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle, 'Circle')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('clipPath', node), attrs)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    },\r\n\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      const clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath, 'ClipPath')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class ForeignObject extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('foreignObject', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject, 'ForeignObject')\r\n","import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n","import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('g', node), attrs)\r\n  }\r\n}\r\n\r\nextend(G, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G, 'G')\r\n","import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('a', node), attrs)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n}\r\n\r\nextend(A, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    unlink () {\r\n      const link = this.linker()\r\n\r\n      if (!link) return this\r\n\r\n      const parent = link.parent()\r\n\r\n      if (!parent) {\r\n        return this.remove()\r\n      }\r\n\r\n      const index = parent.index(link)\r\n      parent.add(this, index)\r\n\r\n      link.remove()\r\n      return this\r\n    },\r\n    linkTo (url) {\r\n      // reuse old link if possible\r\n      let link = this.linker()\r\n\r\n      if (!link) {\r\n        link = new A()\r\n        this.wrap(link)\r\n      }\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this\r\n    },\r\n    linker () {\r\n      const link = this.parent()\r\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\r\n        return link\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n})\r\n\r\nregister(A, 'A')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('mask', node), attrs)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    masker () {\r\n      return this.reference('mask')\r\n    },\r\n\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      const masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask, 'Mask')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('stop', node), attrs)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Gradient: {\r\n    // Add a color stop\r\n    stop: function (offset, color, opacity) {\r\n      return this.put(new Stop()).update(offset, color, opacity)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Stop, 'Stop')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  let ret = selector + '{'\r\n\r\n  for (const i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('style', node), attrs)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  },\r\n  fontface  (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  }\r\n})\r\n\r\nregister(Style, 'Style')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('textPath', node), attrs)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    const track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    const track = this.track()\r\n    let pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      const textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg textPath').filter((node) => {\r\n        return (node.attr('href') || '').includes(this.id())\r\n      })\r\n\r\n      // Does not work in IE11. Use when IE support is dropped\r\n      // return baseFind('svg textPath[*|href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath, 'TextPath')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('use', node), attrs)\r\n  }\r\n\r\n  // Use element as a reference\r\n  use (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).use(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use, 'Use')\r\n","function generate(svg) {\n    // 200 x 200\nconst { width, height } = svg.viewbox();\n// how many stripes should we paint?\nconst numStripes = 10;\n// stripe width === viewBox width / the amount of stripes we would like to paint\nconst stripeWidth = width / numStripes;\n  // store some simple browser default colors in an array\n  const colors = [\"red\", \"orange\", \"green\", \"blue\", \"pink\", \"yellow\"];\n\n  for (let i = 0; i < width; i += stripeWidth) {\n    // pick a number between 0 and 5 (the length of the colors array)\n    const diceRoll = Math.floor(Math.random() * colors.length);\n    const diceRollB = Math.floor(Math.random() * colors.length);\n    // pick out the color from the array using diceRoll as the index\n    const color = colors[diceRoll];\n    const colorB = colors[diceRollB];\n\n    // draw a colored stripe on the canvas based on the “dice roll”\n    svg.rect(stripeWidth, height).x(i).y(0).fill(color).stroke(\"#fff\");\n    svg.rect(height, stripeWidth).x(0).y(i).fill(colorB).stroke(\"#fff\").opacity('0.5');\n  }\n}\n\nexport default generate","function generate(svg) {\n    // 200 x 200\nconst { width, height } = svg.viewbox();\n// how many stripes should we paint?\nconst numStripes = 10;\n// stripe width === viewBox width / the amount of stripes we would like to paint\nconst stripeWidth = width / numStripes;\n  // store some simple browser default colors in an array\n  const colors = [\"gray\", \"blue\", \"cyan\", \"teal\", \"purple\", \"orange\"];\n\n  for (let i = 0; i < width; i += stripeWidth) {\n    // pick a number between 0 and 5 (the length of the colors array)\n    const diceRoll = Math.floor(Math.random() * colors.length);\n    const diceRollB = Math.floor(Math.random() * colors.length);\n    // pick out the color from the array using diceRoll as the index\n    const color = colors[diceRoll];\n    const colorB = colors[diceRollB];\n\n    // draw a colored stripe on the canvas based on the “dice roll”\n    svg.rect(stripeWidth, height).x(i).y(0).fill(color).stroke(\"#fff\");\n    svg.rect(height, stripeWidth).x(0).y(i).fill(colorB).stroke(\"#fff\").opacity('0.5');\n  }\n}\n\nexport default generate","function generate(svg) {\n    // 200 x 200\nconst { width, height } = svg.viewbox();\n// how many stripes should we paint?\nconst numStripes = 3;\n// stripe width === viewBox width / the amount of stripes we would like to paint\nconst stripeWidth = width / numStripes;\n  // store some simple browser default colors in an array\n  const colors = [\"gray\", \"blue\", \"cyan\", \"teal\", \"purple\", \"orange\"];\n\n  for (let i = 0; i < width; i += stripeWidth) {\n    // pick a number between 0 and 5 (the length of the colors array)\n    const diceRoll = Math.floor(Math.random() * colors.length);\n    const diceRollB = Math.floor(Math.random() * colors.length);\n    // pick out the color from the array using diceRoll as the index\n    const color = colors[diceRoll];\n    const colorB = colors[diceRollB];\n\n    // draw a colored stripe on the canvas based on the “dice roll”\n    svg.rect(stripeWidth, height).x(i).y(0).fill(color).stroke(\"#fff\");\n    svg.rect(height, stripeWidth).x(0).y(i).fill(colorB).stroke(\"#fff\").opacity('0.5');\n  }\n}\n\nexport default generate","export default (...fns) => x => fns.reduce((v, f) => f(v), x);","const random = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n  export default random","const clamp = (min : number, max : number) => \n    (v : number) => \n        Math.min(Math.max(v, min), max);\n\nexport default clamp","const maybe = (percent : number = 50) =>  percent > (Math.random() * 100)\n\nexport default maybe","type commandKey = 'M' | 'm' | 'L' | 'l' | 'H' | 'h' | 'V' | 'v' | 'C' | 'c' | 'S' | 's' | 'Q' | 'q' | 'T' | 't' | 'A' | 'a' | 'Z' | 'z'\n\ntype commandName = 'move' | 'lineTo' | 'horizontal' | 'vertical' | 'cubic' | 'smoothCubic' | 'quadratic' | 'smoothQuadratic' | 'arc' | 'close'\n\nenum axis {y = 'y', x = 'x'}\n\ntype commandPair = {\n    relative: commandKey,\n    absolute: commandKey,\n}\n\ntype point = {\n    axis: \"y\" | \"x\" | boolean,\n    coordinate: number,\n}\n\ntype commandObject = {\n    commandName: commandName,\n    absolute: boolean,\n    points: point[]\n}\n\nconst commandMap : Record<commandName, commandPair> = {\n    move: {\n        relative: 'm',\n        absolute: 'M'\n    },\n    lineTo: {\n        relative: 'l',\n        absolute: 'L'\n    },\n    horizontal: {\n        relative: 'h',\n        absolute: 'H'\n    },\n    vertical: {\n        relative: 'v',\n        absolute: 'V'\n    },\n    cubic: {\n        relative: 'c',\n        absolute: 'C'\n    },\n    smoothCubic: {\n        relative: 's',\n        absolute: 'S'\n    },\n    quadratic: {\n        relative: 'q',\n        absolute: 'Q'\n    },\n    smoothQuadratic: {\n        relative: 't',\n        absolute: 'T'\n    },\n    arc: {\n        relative: 'a',\n        absolute: 'A'\n    },\n    close: {\n        relative: 'z',\n        absolute: 'Z'\n    },\n}\n\nconst getAxis = (command : commandName , index : number) => {\n    if ( 'vertical' === command ) {\n        return 'y'\n    }\n    if ( 'horizontal' === command ) {\n        return 'x'\n    }\n    if ('arc' === command) {\n        if (index === 2 || index === 3 || index === 4) {\n            return false\n        }\n        if (index > 4) {\n            return index % 2 === 0 ? 'y' : 'x';\n        }\n    }\n    return index % 2 === 0 ? 'x' : 'y';\n}\n\nconst renderCommand = (command : commandObject) => `${commandMap[command.commandName][command.absolute ? 'absolute' : 'relative']} ${command.points.map(p => p.coordinate).join(' ')}`\n\nconst shiftPoint = (point : point, shiftValue : number) => ({...point, coordinate: Math.round(point.coordinate + shiftValue)})\n\nconst shiftPoints = (points : point[], xShift: number, yShift: number) => points.map((point) => shiftPoint(point, point.axis === false ? 0 : point.axis === 'x' ? xShift : yShift  ))\n\n\nconst path = () => {\n    let commands : commandObject[] = []\n\n    const render = () => commands.reduce((output, current) => `${output} ${renderCommand(current)}`, '')\n    const push = (command : commandObject) => {\n        commands = [...commands, command]\n        return commands\n    }\n    const shift = (x, y) => {\n        commands = commands.map((command : commandObject) => ({...command, points: shiftPoints(command.points, x, y)}))\n        return commands\n    }\n    const get = () => commands\n\n    const addCommand = (command : commandName) => (points = [], absolute = false) => push({commandName: command, absolute, points: points.map((p, i) => ({coordinate: p, axis: getAxis(command, i)})) })\n\n   const move = addCommand('move');\nconst lineTo = addCommand('lineTo');\nconst horizontal = addCommand('horizontal');\nconst vertical = addCommand('vertical');\nconst cubic = addCommand('cubic');\nconst smoothCubic = addCommand('smoothCubic');\nconst quadratic = addCommand('quadratic');\nconst smoothQuadratic = addCommand('smoothQuadratic');\nconst arc = addCommand('arc');\nconst close = addCommand('close');\n\n    return {\n        render,\n        push,\n        shift,\n        get,\n        move,\n        lineTo,\n        horizontal,\n        vertical,\n        cubic,\n        smoothCubic,\n        quadratic,\n        smoothQuadratic,\n        arc,\n        close,\n    }\n}\n\nexport default path","import pipe from '../lib/pipe'\nimport random from '../lib/random'\nimport clamp from '../lib/clamp'\nimport maybe from '../lib/maybe'\nimport path from '../lib/path'\nconst drinkSpace = 8;\ntype Drink = {\n  height?: number,\n  width?: number,\n  skew?: number,\n  slope?: boolean,\n  stem?: {\n    width: number,\n    baseSlope: number,\n    baseHeight: number,\n    roundHeight: number,\n    height: number,\n    baseWidthFactor: number,\n  },\n  position?: {\n    x: number,\n    y: number,\n  },\n  roundness?: {\n    x: number,\n    y: number,\n  },\n  viewBox?: {\n    height: number,\n    width: number,\n  },\n\n}\n\ntype DrinkProcess = (drink : Drink) => Drink\n\nconst getArea : DrinkProcess = (drink : Drink) => {\n  const newDrink = {...drink}\n  newDrink.height = random(20, 150)\n  newDrink.width = random(50, 100)\n  newDrink.skew = Math.random()\n  return newDrink\n}\n\nconst getStem : DrinkProcess = ( drink : Drink ) => {\n  if ( drink.height < 40 ) {\n    const height = random(20, 100);\n    const stem = {\n        width: random(2,3),\n        baseSlope: random(5, clamp(0, 15)(height)),\n        baseHeight: random(1, 3),\n        baseWidthFactor: clamp(0.7, 1)(Math.random()),\n        roundHeight: random(10, 20),\n        height,\n    }\n    return {...drink, slope: Math.random() > 0.6,\n      stem}\n  }\n\n  return {...drink, skew: clamp(0, 0.3)(drink.skew)}\n}\n\nconst getRoundness : DrinkProcess = ( drink ) => {\n  let x = Math.random()\n  const y = clamp(0, 0.6)(Math.random())\n  if (! drink.stem ) {\n    x = x > 0.4 ? 0.4 : x\n  }\n  return {...drink, roundness: {\n    x,\n    y,\n  }}\n}\n\nconst getPosition : DrinkProcess = ( drink : Drink ) => {\n  const x = ( drink.viewBox.width / 2 ) - ( drink.width / 2 )\n  const y = drink.viewBox.height - drink.height - 10 - (drink.stem ? drink.stem.height : 0)\n  return {...drink, position: {\n    x,\n    y,\n  }}\n}\n\nconst renderDrink = (drink : Drink, svg) => {\n  const fill = \"transparent\"\n  const stroke = \"#ec1304\"\n  const strokeOptions = {\n    color: stroke,\n    width: 0.25,\n  }\n  if (drink.stem) {\n    const stemMaskShape = svg.path(makeStemPoints(drink)).fill('white').stroke(strokeOptions);\n    const stemMask = svg.mask().add(stemMaskShape)\n    svg.path(makeStemPoints(drink)).fill(fill).stroke({...strokeOptions, width: 0.5})\n    svg.path(makeStemHighlight(drink)).fill(fill).stroke(strokeOptions).maskWith(stemMask)\n    svg.rect((drink.width * drink.stem.baseWidthFactor)/2 + 2, drink.stem.height).move((drink.position.x + drink.width/2 + 0.5), drink.position.y + drink.height).fill(`${stroke}33`).maskWith(stemMask)\n    svg.rect(drink.stem.width, random(3, (drink.stem.height > 6) ? (drink.stem.height / 2) : 4)).move(drink.position.x + (drink.width / 2) - (drink.stem.width), drink.position.y + drink.height ).fill(`${stroke}aa`).maskWith(stemMask)\n    svg.rect(drink.stem.width, random(2, 4)).move(drink.position.x + (drink.width / 2), drink.position.y + drink.height ).fill(`${stroke}aa`).maskWith(stemMask)\n  }\n  const shapeFn = drink.slope ? makePointsSlope : makePoints;\n  const outerMaskShape = svg.path(makePoints(drink)).fill('white').stroke({...strokeOptions, width: 0.5});\n  const innerMaskShape = svg.path(makeMaskPoints(drink)).fill('white').stroke(strokeOptions);\n  const innerMask = svg.mask().add(innerMaskShape)\n  const outerMask = svg.mask().add(outerMaskShape)\n  svg.rect(200, drink.height).move(0, drink.position.y + drinkSpace).fill(fill).stroke(strokeOptions).maskWith(innerMask)\n  svg.rect(random(3, 15), drink.height).move(drink.position.x + drink.width/4, drink.position.y + drinkSpace).fill(stroke).stroke(strokeOptions).maskWith(innerMask)\n  svg.rect(random(3, 40), drink.height).move(drink.position.x + 2, drink.position.y).fill(`${stroke}11`).maskWith(outerMask)\n  svg.rect(random(4, 30), drink.height).move(drink.position.x + drink.width - 12, drink.position.y + drinkSpace).fill(`${stroke}33`).maskWith(innerMask)\n  svg.rect(random(4, 30), drink.height).move(drink.position.x + drink.width - 22, drink.position.y + drinkSpace).fill(`${stroke}33`).maskWith(outerMask)\n  svg.rect(random(2, 6), drink.height).move(drink.position.x + drink.width - 12, drink.position.y + drinkSpace).fill(stroke).maskWith(innerMask)\n  svg.rect(random(2, 20), drink.height).move(drink.position.x + 1, drink.position.y + drinkSpace).fill(`${stroke}11`).maskWith(innerMask)\n  maybe(70) && svg.rect(drink.width/2, 1).move(drink.position.x + 2, drink.position.y + drinkSpace / 4).fill(`${stroke}ee`).maskWith(outerMask)\n  maybe(70) && svg.rect(drink.width/2, drink.height).move(drink.position.x + drink.width/2, drink.position.y).fill(`${stroke}22`).maskWith(outerMask)\n  svg.rect(drink.width/2 * 0.7, random(1,3)).move(drink.position.x + 1, drink.position.y + drink.height - 4).fill(`${stroke}66`).maskWith(outerMask)\n  svg.path(makeMaskPoints(drink)).fill(`${stroke}11`).stroke(strokeOptions)\n  svg.path(makePoints(drink)).fill(fill).stroke({...strokeOptions, width: 0.5});\n  svg.path(makeHighlight(drink)).fill(fill).stroke(strokeOptions)\n  if (drink.height > 60 && maybe(40)) {\n    svg.path(makeDetail(drink)).fill(fill).stroke(strokeOptions).maskWith(outerMask)\n  }\n  maybe(70) && svg.rect(random(2, 4), drink.height).move(drink.position.x + random(0, drink.width), drink.position.y).fill(`#ffffff99`).maskWith(innerMask)\n  maybe(80) && svg.rect(random(1, 4), drink.height).move(drink.position.x + drink.width - random(0, drink.width/2), drink.position.y).fill(`#ffffffee`).maskWith(innerMask)\n}\n\nconst makeStemHighlight = drink => {\n  const start = {\n    x: drink.viewBox.width / 2,\n    y: drink.viewBox.height - 10,\n  }\n  const end = {\n    x: start.x,\n    y: start.y - drink.stem.height,\n  }\n  const roundBase = drink.roundness.x + drink.roundness.y > 0.5\n  const baseWidth = drink.width * drink.stem.baseWidthFactor;\n  const stemHighlight = path();\n  stemHighlight.move([start.x - drink.stem.width + 2, end.y], true)\n  stemHighlight.vertical([drink.stem.height - (roundBase ? drink.stem.roundHeight : drink.stem.baseSlope) + 2])\n  if (roundBase) {\n\n    stemHighlight.quadratic([0, drink.stem.roundHeight - 1, -1 * (((baseWidth / 2) - drink.stem.width)) - 1, drink.stem.roundHeight])\n  } else {\n    stemHighlight.lineTo([-1 * ((baseWidth / 2) - drink.stem.width - 3), (drink.stem.baseSlope - 3)])\n  }\n  return stemHighlight.render();\n}\n\nconst makeDetail = (drink) => {\n  const detailPath = path();\n  const arcSizes = [5, 9, 10, 9, 5]\n  const baseArc = drink.width/(arcSizes.length + 3)\n  const total = arcSizes.reduce((s, c) => s + c, 0);\n  const proportion = arcSizes.map(v => v/total)\n  detailPath.move([drink.position.x, drink.position.y + baseArc + 25], true)\n  proportion.map((width) => {\n    detailPath.arc([(drink.width/2) * width/2, baseArc, 0, 0, 1, drink.width * width, 0])\n  })\n  proportion.reduce((last, width) => {\n    detailPath.move([drink.position.x + (drink.width * (width + last)), drink.position.y + baseArc + 25], true)\n    detailPath.vertical([10]);\n    return width + last\n  }, 0)\n  return detailPath.render();\n}\n\nconst makeHighlight = drink => {\n  const heightPortion = drink.height * drink.roundness.y > drink.height + drinkSpace ? drink.height + drinkSpace : drink.height * drink.roundness.y;\n  const curveVal = drink.height - (heightPortion) - (drink.height * 0.05) - drinkSpace\n  const highLightPath = path()\n  \n  highLightPath.move([drink.position.x + 7, drink.position.y + drinkSpace / 2], true);\n  highLightPath.lineTo([0, curveVal + drinkSpace / 2]);\n  highLightPath.quadratic([0, heightPortion, ((drink.width / 2)) * drink.roundness.x, heightPortion ]);\n  if (maybe(80)) {\n\n    highLightPath.move([drink.position.x + drink.width - 20, drink.position.y + drinkSpace / 2], true)\n    highLightPath.lineTo([0, curveVal + drinkSpace / 2])\n    highLightPath.quadratic([0, heightPortion, -1 * (drink.width / 50), heightPortion])\n  }\n  highLightPath.move([drink.position.x + drink.width - 2, drink.position.y + drinkSpace / 2], true);\n  highLightPath.horizontal([-1 * (drink.width - 4)]);\n  const command = highLightPath.render();\n  return command; \n}\n\nconst makeStemPoints = ( drink : Drink ) => {\n  const stemPoints = path();\n  const start = {\n    x: drink.viewBox.width / 2,\n    y: drink.viewBox.height - 10,\n  }\n  const end = {\n    x: start.x,\n    y: start.y - drink.stem.height,\n  }\n  const roundBase = drink.roundness.x + drink.roundness.y > 0.5\n  const baseWidth = drink.width * drink.stem.baseWidthFactor;\n  stemPoints.move([start.x - drink.stem.width, end.y], true)\n  stemPoints.vertical([drink.stem.height - (roundBase ? drink.stem.roundHeight : drink.stem.baseSlope)])\n  if (roundBase) {\n    stemPoints.quadratic([0, drink.stem.roundHeight - 1, -1 * (((baseWidth / 2) - drink.stem.width)), drink.stem.roundHeight])\n  } else {\n    stemPoints.lineTo([-1 * ((baseWidth / 2) - drink.stem.width), drink.stem.baseSlope - 1])\n  }\n  stemPoints.arc([-1 * (drink.stem.baseHeight/2), drink.stem.baseHeight/2, 0, 0, 0, 0, drink.stem.baseHeight])\n  stemPoints.horizontal([baseWidth])\n  stemPoints.arc([(drink.stem.baseHeight/2), -1 * drink.stem.baseHeight/2, 0, 1, 0, 0, -1 * drink.stem.baseHeight])\n  if (roundBase) {\n    stemPoints.quadratic([-1 * ((baseWidth / 2) - drink.stem.width), -1, -1 * ((baseWidth / 2) - drink.stem.width), -1 * drink.stem.roundHeight])\n  } else {\n    stemPoints.lineTo([-1 * ((baseWidth / 2) - drink.stem.width), -1 * (drink.stem.baseSlope - 1)])\n  }\n  stemPoints.vertical([-1 * (drink.stem.height - (roundBase ? drink.stem.roundHeight : drink.stem.baseSlope))])\n    return stemPoints.render();\n}\n\nconst makePoints = (drink) => {\n  const skewVal = 0//(drink.skew * ( drink.width / 2 ) - (drink.stem ? drink.stem.width / 2 : 2))\n  const heightPortion = drink.height * drink.roundness.y;\n  const outlinePath = path();\n  outlinePath.move([drink.position.x, drink.position.y], true)\n  outlinePath.lineTo([0, drink.height- heightPortion])\n  outlinePath.quadratic([0, heightPortion, ((drink.width / 2) + skewVal) * drink.roundness.x, heightPortion])\n  outlinePath.lineTo([drink.width - (drink.width * drink.roundness.x) - (skewVal * 2), 0])\n  outlinePath.quadratic([((drink.width / 2) + skewVal) * drink.roundness.x, 0, ((drink.width / 2) + skewVal) * drink.roundness.x, -1 * heightPortion ])\n  outlinePath.lineTo([0, -1 * (drink.height - (heightPortion))])\n  outlinePath.close()\n  const command = outlinePath.render()\n  return command;\n}\n\nconst makeMaskPoints = (drink) => {\n  \n  const skewVal = 0//(drink.skew * ( drink.width / 2 ) - (drink.stem ? drink.stem.width / 2 : 2))\n  const heightPortion = drink.height * drink.roundness.y > drink.height + drinkSpace ? drink.height + drinkSpace : drink.height * drink.roundness.y;\n  const curveVal = drink.height - (heightPortion) - (drink.height * 0.1) - drinkSpace\n  const maskPath = path();\n  maskPath.move([drink.position.x + 2, drink.position.y + drinkSpace], true)\n  maskPath.lineTo([skewVal, curveVal])\n  maskPath.quadratic([0, heightPortion, ((drink.width / 2) + skewVal) * drink.roundness.x, heightPortion])\n  maskPath.lineTo([drink.width - (drink.width * drink.roundness.x) - (skewVal * 2) - 4, 0])\n  maskPath.quadratic([((drink.width / 2) + skewVal) * drink.roundness.x, 0, ((drink.width / 2) + skewVal) * drink.roundness.x, -1 * (heightPortion)])\n  maskPath.lineTo([skewVal, -1 * (drink.height - (heightPortion) - (drink.height * 0.1) - drinkSpace)])\n  maskPath.close();\n  const command = maskPath.render();\n  return command;\n}\n\nconst makePointsSlope = (drink) => {\n const slopePath = path();\n  slopePath.move([drink.position.x, drink.position.y], true)\n  slopePath.lineTo([(drink.width/2) - (drink.stem.width), drink.height])\n  slopePath.horizontal([drink.stem.width * 2])\n  slopePath.lineTo([(drink.width/2) - (drink.stem.width), -drink.height])\n  slopePath.close()\n  return slopePath.render();\n}\n\nfunction generate(svg) {\n    // 200 x 200\nconst { width, height } = svg.viewbox();\n\n\nconst getDrink = pipe(getArea, getStem, getPosition, getRoundness)\n\n\nrenderDrink(getDrink({viewBox: {width, height}}), svg)\n}\n\nexport default generate","import stripes from './stripes';\nimport tripes from './tripes';\nimport blocky from './blocky';\nimport drink from './drink';\n\nconst sketches = {drink, stripes, tripes, blocky }\n\nexport const keys = Object.keys(sketches)\n\nexport default (slug) => {\n    return sketches[slug]\n}\n\n","import { SVG } from '@svgdotjs/svg.js';\nimport getSketch, { keys } from '../sketches';\nconst initialIndex = 0;\n\nconst nextIndex = (index) => (index + 2 > keys.length ? 0 : index + 1);\nconst prevIndex = (index) => (index - 1 < 0 ? keys.length : index - 1);\n\nconst init = () => {\n  let index = initialIndex;\n\n  const svg = SVG('.canvas');\n  let generateSketch = getSketch(keys[index]);\n\n  const regenerate = document.querySelector('.regenerate');\n  const previous = document.querySelector('.previous');\n  const next = document.querySelector('.next');\n\n  previous.addEventListener('click', () => {\n    svg.clear();\n    index = prevIndex(index);\n    generateSketch = getSketch(keys[index]);\n    generateSketch(svg);\n  });\n\n  next.addEventListener('click', () => {\n    svg.clear();\n    index = nextIndex(index);\n    generateSketch = getSketch(keys[index]);\n    generateSketch(svg);\n  });\n\n  regenerate.addEventListener('click', () => {\n    svg.clear();\n    generateSketch(svg);\n  });\n\n  generateSketch(svg);\n};\n\nexport default init;\n","import './styles/index.scss'\nimport init from './lib/init'\n\ninit();"]}